# This workflow will build a golang project for testing purposes
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go-pr-test

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - FORK.md
      - AUTHORS.md
      - CHANGELOG.md
      - .gitignore
      - .github/**
      - _legacy/**
      - _examples/**
      - _assets/**
      - LICENSE
      - Makefile
  pull_request:
    branches:
      - main

env:
  GO_VER: 1.20.3

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VER }}

    - name: Run tests
      run: go test --timeout=1m --coverprofile cover.out -v ./...

  build:
    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VER }}
        
    # Deprecated date will removed soon likely if ldflags don't return
    - name: Get current date
      id: date
      run: |
        echo "date=$(date)" >> $GITHUB_ENV

    - name: Build race
      run: go build -race
      env:
        GOOS: 'linux'
        GOARCH: 'amd64'

# not producing artifacts
#    - name: Build linux@amd64
#      run: go build
#      env:
#        GOOS: 'linux'
#        GOARCH: 'amd64' # Wonder if I can matrix this with arm64 as well
#    
#    - name: Clean up amd64
#      run: rm -rf line
#
#    - name: Build linux@arm64
#      run: go build
#      env:
#        GOOS: 'linux'
#        GOARCH: 'arm64' # Wonder if I can matrix this with arm64 as well

      
